Search.setIndex({"docnames": ["coord_trans", "data_reporter", "decorator", "etl", "fs", "geocode", "geometry", "index", "installation", "niubility", "oss", "stat", "util"], "filenames": ["coord_trans.rst", "data_reporter.rst", "decorator.rst", "etl.rst", "fs.rst", "geocode.rst", "geometry.rst", "index.rst", "installation.rst", "niubility.rst", "oss.rst", "stat.rst", "util.rst"], "titles": ["\u5750\u6807\u8f6c\u6362", "\u6570\u636e\u62a5\u544a", "\u88c5\u9970\u5668", "\u6570\u636e\u8bfb\u53d6\u3001\u5904\u7406\u4e0e\u4fdd\u5b58", "FileSystem\u5de5\u5177\u96c6", "Geocoding", "\u5730\u7406\u5904\u7406", "ricco \u6587\u6863", "\u5b89\u88c5", "\u2605\u2605\u5b9e\u7528\u65b9\u6cd5\u63a8\u8350\u2605\u2605", "OSS\u5de5\u5177\u96c6", "\u7edf\u8ba1\u5206\u6790", "\u5de5\u5177\u96c6"], "terms": {"class": [0, 1, 3, 4, 5, 6, 9, 12], "function": [0, 2, 3, 5, 6, 11, 12], "ricco": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12], "geometri": [0, 3, 6, 9, 12], "coord_tran": 0, "srs": [0, 5, 7], "object": [0, 3, 4, 12], "spatial": 0, "refer": 0, "system": 0, "attribut": [0, 4, 12], "bd09": [0, 5], "gcj02": [0, 5], "wgs84": [0, 5], "world": 0, "geodet": 0, "1984": 0, "coord_trans_geom": [0, 7], "df": [0, 3, 5, 6, 9, 11, 12], "srs_from": 0, "str": [0, 1, 3, 5, 6, 9, 11, 12], "srs_to": 0, "c_geometri": [0, 6, 9], "geometry_format": [0, 6, 9], "none": [0, 1, 2, 3, 4, 5, 6, 9, 12], "datafram": [0, 1, 3, 5, 6, 9, 11, 12], "coord_trans_x2i": [0, 7], "c_lng": [0, 5, 6, 9], "lng": [0, 5, 6, 9], "c_lat": [0, 5, 6, 9], "lat": [0, 5, 6, 9], "coord_transform_geojson": [0, 7], "obj": 0, "dict": [0, 3, 6, 9, 12], "from_sr": 0, "to_sr": 0, "geojson": [0, 3, 6, 9], "param": [0, 3, 12], "coord_transform": [0, 7], "out_of_china": [0, 7], "etl": [1, 3, 8, 9, 11], "data_report": 1, "datareport": 1, "data": [1, 3, 12], "panda": [1, 3, 5, 6, 9, 12], "core": [1, 3, 5, 6, 9, 12], "frame": [1, 3, 5, 6, 9, 12], "onli": 1, "list": [1, 3, 5, 6, 8, 9, 12], "exclud": 1, "docx": [1, 12], "method": [1, 4, 12], "basic": 1, "col_by_col": 1, "examine_al": 1, "file_path": [1, 3, 9, 12], "preprocess": 1, "util": [2, 6, 12], "decor": 2, "as_staticmethod": [2, 7], "cls": 2, "staticmethod": 2, "check_nul": [2, 7], "default_rv": 2, "check_shap": [2, 7], "func": [2, 3, 9, 12], "shape": [2, 3, 6, 8, 12], "check_str": [2, 7], "print_doc": [2, 7], "docstr": 2, "process_multi": [2, 7], "appli": 2, "parallel_appli": 2, "progress": [2, 7], "tqdm": 2, "progress_appli": 2, "run_onc": [2, 7], "timer": [2, 7], "desc": 2, "get_kml_df_with_level": 3, "gdf_dict": 3, "geodatafram": [3, 7, 9], "key": [3, 5, 12], "valu": [3, 12], "level": 3, "gpd": 3, "kml_df_create_level": 3, "name": [3, 8, 12], "o1": 3, "rdf": [3, 9], "sheet_nam": [3, 9], "sheet_contain": [3, 9], "encod": [3, 9], "info": [3, 9], "bool": [3, 5, 6, 9, 12], "fals": [3, 4, 5, 6, 9, 12], "dtype": [3, 9], "column": [3, 9, 12], "nrow": [3, 9], "int": [3, 5, 6, 9, 12], "recurs": [3, 4, 9, 12], "true": [3, 5, 6, 9, 12], "access_key": [3, 4, 9], "secret_key": [3, 4, 9], "csv": [3, 9, 12], "xlsx": [3, 9], "xls": [3, 9], "shp": [3, 9], "parquet": [3, 9], "pickl": [3, 9], "feather": [3, 9], "kml": [3, 9], "ovkml": [3, 9], "json": [3, 9, 12], "sheet": [3, 9], "oss": [3, 7, 9], "rdf_by_dir": [3, 9], "dir_path": [3, 4, 12], "ext": [3, 4, 9, 12], "ignore_index": 3, "sign_data_from": 3, "col_data_from": 3, "__data_from": 3, "utf": 3, "rdxls": 3, "excel": [3, 9, 12], "read_all_sheet": 3, "ignore_diff_column": 3, "read_csv": 3, "kwarg": [3, 5, 9], "pd": [3, 6, 9, 12], "read_gdb": 3, "gdb": 3, "read_kml": 3, "keep_level": 3, "separate_fold": 3, "polygon": [3, 6, 9], "multipolygon": [3, 6, 9], "or": [3, 12], "read_line_json": 3, "read_oss": 3, "read_shapefil": 3, "shapefil": 3, "read_shapefile_with_driv": 3, "dbf": 3, "read_spss": 3, "spss": 3, "sav": 3, "columns_contrast": 3, "df_left": 3, "df_right": 3, "n_row": 3, "convert_d": 3, "mode": [3, 12], "first": [3, 12], "last": [3, 12], "convert_to_float": 3, "rex_method": [3, 12], "mean": [3, 6, 9, 12], "float": [3, 6, 9, 12], "max": 3, "min": 3, "create_column": 3, "df_iter": 3, "chunksiz": [3, 9], "part": [3, 9], "dict2df": 3, "c_key": 3, "c_valu": 3, "as_index": 3, "drop_by_df": 3, "df_delet": 3, "expand_dict": 3, "c_src": 3, "expand_dict_sil": 3, "expand_graph": 3, "start_level": 3, "id": [3, 12], "c_level_typ": 3, "level_typ": 3, "c_parent_key": 3, "parent_id": 3, "c_info": 3, "fillna_by_ad": 3, "col": [3, 11, 12], "filter_by_df": 3, "df_sizer": 3, "revers": [3, 12], "df_size": 3, "fix_nul": 3, "nan": [3, 12], "nat": 3, "fuzz_df": 3, "target_seri": 3, "seri": [3, 6, 12], "c_dst": [3, 6, 9], "valid_scor": [3, 12], "60": 3, "_target": 3, "is_chang": 3, "df_old": 3, "df_new": 3, "key_col": [3, 6, 12], "value_col": 3, "c_res": 3, "keep_best_uniqu": 3, "subset": 3, "merge_df": 3, "dfs": 3, "on": 3, "how": 3, "merg": 3, "null_if_in": 3, "rolling_by_month": 3, "c_date": 3, "c_group": 3, "month": [3, 12], "agg": [3, 6, 9, 12], "sum": [3, 6, 9], "round_by_column": 3, "shift_data": 3, "subfix": 3, "shift": 3, "split_list_to_row": 3, "split_to_row": 3, "delimit": 3, "table2dict": 3, "orient": 3, "split": 3, "record": 3, "index": [3, 6, 9], "update_df": 3, "new_df": 3, "overwrit": [3, 4, 9, 12], "error": [3, 12], "ignor": [3, 12], "other": [3, 12], "cell": 3, "na": [3, 6, 12], "rais": [3, 12], "target": 3, "valueerror": 3, "overlap": 3, "wrap_dict": 3, "c_srcs": 3, "extra": 3, "wrap": 3, "to_csv_by_lin": 3, "filepath": [3, 9, 12], "to_fil": [3, 9], "log": [3, 9, 12], "to_oss": 3, "to_parquet": 3, "wkb": [3, 6, 9], "to_parts_fil": 3, "dirpath": [3, 12], "to_ext": [3, 9], "to_sheet": 3, "df_iter_by_column": 3, "by": [3, 5, 6, 9], "null": 3, "dir_file_to_x": [3, 9], "from_dir": [3, 9], "to_dir": [3, 9], "from_ext": [3, 9], "delet": [3, 6, 9], "file_to_x": [3, 9], "gdb2csv": 3, "output_path": 3, "with_geometri": 3, "geom_format": [3, 6], "merge_csv_fil": 3, "output_fil": 3, "csv_dir": 3, "reshape_fil": [3, 9], "100000": [3, 9], "split2x": [3, 9], "filenam": [3, 9], "fn": [3, 9, 12], "split2x_by_chunks": 3, "50000": 3, "split2x_by_part": 3, "split_csv_by_column": 3, "merge_fil": 3, "entropi": 3, "entropyclass": 3, "neg_col": 3, "gevalu": 3, "pca_scor": 3, "pca": 3, "pvalu": 3, "rescal": 3, "scale_min": 3, "scale_max": 3, "score_rang": 3, "tupl": [3, 6, 12], "100": [3, 5, 12], "standard_": 3, "standard_e_neg": 3, "wvalu": 3, "get_graph_dict": 3, "graph_df": 3, "c_parent_typ": 3, "parent_typ": 3, "query_from_graph": 3, "graph_data": 3, "max_depth": 3, "10": [3, 12], "fs": 4, "ossutil": 4, "work_path": 4, "endpoint": 4, "region": 4, "abspath": [4, 12], "_path": 4, "dir_it": [4, 12], "download": 4, "path_remot": 4, "path_loc": 4, "exist": 4, "mkdir": 4, "object_path": 4, "oss2": 4, "bucket": 4, "rm": 4, "upload": 4, "hostnam": 4, "port": 4, "usernam": 4, "password": 4, "chdir": 4, "path": [4, 9, 12], "remote_path": 4, "local_dir": 4, "isdir": 4, "isfil": 4, "listdir": 4, "properti": [4, 12], "workdir": 4, "address": 5, "citi": [5, 6, 9, 12], "sourc": 5, "key_baidu": 5, "key_amap": 5, "baidu": 5, "amap": 5, "baidu_poi": 5, "amap_poi": 5, "geocode_best": [5, 7], "address_typ": 5, "sig": 5, "80": [5, 12], "address_geocod": 5, "poi": [5, 6, 9], "geocode_best_address": [5, 7], "geocode_best_poi": [5, 7], "geocode_df": [5, 7], "with_detail": 5, "ignore_exist": 5, "progress_bar": 5, "auto_load": 6, "basegeometri": 6, "crs_sh2000": 6, "2000": 6, "crs": [6, 9], "deg_to_decim": 6, "123": [6, 12], "77": 6, "distanc": 6, "p1": 6, "p2": 6, "epsg_from": 6, "4326": 6, "epsg_to": 6, "epsg": [6, 9], "dumps2x": 6, "ensure_lnglat": 6, "lnglat": 6, "ensure_multi_geom": 6, "geom": 6, "basemultipartgeometri": 6, "point": [6, 9, 12], "linestr": 6, "multi": 6, "multipoint": 6, "multilinestr": 6, "ensure_single_geom": 6, "ensure_valid_polygon": 6, "geometrycollect": 6, "epsg_from_lnglat": 6, "utm": 6, "filter_polygon_from_collect": 6, "geojson_dump": 6, "geojson_load": 6, "warn": [6, 9, 12], "get_epsg": 6, "get_inner_point": 6, "within": 6, "infer_geom_format": 6, "base": [6, 12], "is_geojson": 6, "is_lin": 6, "is_point": 6, "is_polygon": 6, "is_shap": 6, "is_valid_lnglat": 6, "is_wkb": 6, "is_wkt": 6, "wkt": [6, 9], "lng_from_citi": 6, "make_lin": 6, "multiline2multipolygon": 6, "multiline_shap": 6, "forc": 6, "multilin": 6, "split_multi_geom": 6, "st_is_empti": 6, "st_not_empti": 6, "text2lnglat": 6, "text": [6, 12], "point_sep": 6, "lnglat_sep": 6, "text2shap": 6, "geometry_typ": 6, "ensure_multi": 6, "line": [6, 9], "ss": 6, "121": 6, "4737": 6, "31": 6, "2304": 6, "4740": 6, "2307": 6, "474": 6, "wkb_dump": 6, "wkb_load": 6, "hex": 6, "wkt_dump": 6, "wkt_load": 6, "auto2shap": [6, 9], "auto2x": [6, 9], "buffer": 6, "radius": [6, 9], "geo_typ": [6, 9], "buffer_geometri": [6, 9], "geo_format": [6, 9], "numer": [6, 9], "distance_gdf": 6, "df_target": [6, 9], "c_tag": [6, 9], "distance_min": 6, "ensure_geometri": 6, "ensure_point": [6, 9], "geojson2shap": 6, "epsg_cod": 6, "geom_empty2nul": 6, "get_area": [6, 9], "area": [6, 9], "decim": [6, 9], "code": [6, 9], "get_neighbor": 6, "geopanda": [6, 8, 9], "res_typ": 6, "get_projection_xi": 6, "c_x": 6, "c_i": 6, "lnglat2shap": 6, "lnglat2wkb": 6, "lnglat2wkt": 6, "mark_tags_v2": [6, 9], "polygon_df": [6, 9], "col_list": [6, 9], "predic": [6, 9], "intersect": [6, 9], "drop_geometri": [6, 9], "c_polygon_geometri": [6, 9], "sjoin": [6, 9], "point_df": [6, 9], "nearest_kdtre": [6, 9], "df_poi": [6, 9], "c_count": [6, 9], "count": [6, 9], "c_min_dist": [6, 9], "min_dist": [6, 9], "limit": [6, 9, 12], "keep_origin": [6, 9], "leaf_siz": [6, 9, 12], "kdtree": [6, 7, 9], "nearest_neighbor": [6, 9], "norm_geometri": 6, "project": [6, 9], "geomdatafram": [6, 9], "projection_lnglat": [6, 9], "shapely2central_shap": 6, "shapely2geojson": 6, "shapely2lnglat": 6, "default": 6, "shapely2wkb": 6, "shapely2wkt": 6, "shapely2x": [6, 9], "spatial_agg": [6, 9], "split_grid": 6, "step": [6, 12], "split_multi_to_row": 6, "wkb2lnglat": 6, "wkb2shape": 6, "wkb2wkt": 6, "wkt2lnglat": 6, "wkt2shape": 6, "wkt2wkb": 6, "topolog": 6, "fix_topolog": 6, "fill_intersect": 6, "keep_contain": 6, "is_topology_valid": 6, "jupyt": 7, "word": 7, "extract": [7, 9], "transform": 7, "load": [7, 9], "file": [7, 9], "graph": 7, "filesystem": 7, "sftp": 7, "geocod": 7, "python": 8, "pip": 8, "instal": 8, "conda": 8, "creat": 8, "activ": 8, "shapely2": 8, "post1": 8, "11": 8, "kernel": 8, "chang": 8, "ipykernel": 8, "user": 8, "display": 8, "kernelspec": 8, "uninstal": 8, "99": 9, "from": 9, "import": 9, "test": 9, "path_dir": 9, "as": 9, "1000": 9, "def": 9, "process": 9, "return": [9, 12], "path_dir_to": 9, "df_plate": 9, "plate": 9, "plate_nam": 9, "stat": 11, "describe_auto": 11, "describe_d": 11, "describe_object": 11, "describe_seri": 11, "suspect_series_typ": 11, "agg_pars": 12, "ensure_ext": 12, "ensure_list": 12, "val": 12, "collect": 12, "is_empti": 12, "np": 12, "msg": 12, "not_empti": 12, "second_to_desc": 12, "second": 12, "2m": 12, "3s": 12, "1234": 12, "20m": 12, "40s": 12, "123456": 12, "1d": 12, "10h": 12, "17m": 12, "36s": 12, "second_to_dhm": 12, "warn_": 12, "if_or_not": 12, "and_": 12, "condit": 12, "and": 12, "check_diff": 12, "ls1": 12, "ls2": 12, "diff": 12, "drop_repeat": 12, "eval_": 12, "extract_num": 12, "string": 12, "num_typ": 12, "join_list": 12, "ignore_pct": 12, "multi_warn": 12, "numpi": 12, "first_notnull_valu": 12, "iter": 12, "fix_sql": 12, "sql": 12, "fix_str": 12, "fuzz_match": 12, "string_set": 12, "fix_string_set": 12, "fuzz_pair": 12, "score": 12, "50": 12, "get_city_id_by_nam": 12, "get_shortest_el": 12, "element": 12, "get_uuid": 12, "uuid": 12, "house_type_format": 12, "interchange_dict": 12, "dic": 12, "is_digit": 12, "is_hex": 12, "is_unique_seri": 12, "ignore_na": 12, "is_valid_uuid": 12, "uuid_to_test": 12, "version": 12, "isinstance_in_list": 12, "type": 12, "list2dict": 12, "or_": 12, "per2float": 12, "physical_ag": 12, "birthday": 12, "datetim": 12, "deadlin": 12, "pinyin": 12, "re_fast": 12, "pattern": 12, "relstrip": 12, "kwd": 12, "remove_null_in_dict": 12, "rerstrip": 12, "rstrip_d0": 12, "130": 12, "segment": 12, "gap": 12, "set": 12, "sep": 12, "unit": 12, "bottom": 12, "top": 12, "num1": 12, "num2": 12, "sort_by_list": 12, "src_list": 12, "by_list": 12, "filter_": 12, "filter": 12, "to_bool": 12, "t_list": 12, "f_list": 12, "coerc": 12, "to_float": 12, "to_json_str": 12, "to_str_list": 12, "union_list_v2": 12, "union_str_v2": 12, "abc": 12, "dt": 12, "date": 12, "format": 12, "dst_format": 12, "date_mov": 12, "year": 12, "day": 12, "day_half_year_ago": 12, "first_day_of_this_month": 12, "last_day_of_this_month": 12, "monday_of_this_week": 12, "one_year_ago": 12, "the_day_after_tomorrow": 12, "the_day_before_yesterday": 12, "today": 12, "tomorrow": 12, "yesterday": 12, "dt2": 12, "date_format": 12, "get": 12, "auto2d": 12, "excel2d": 12, "date_typ": 12, "ymd": 12, "infer_format": 12, "is_valid_d": 12, "to_str": 12, "os": 12, "count_fil": 12, "dir2zip": 12, "delete_origin": 12, "ignore_hidden_fil": 12, "dir_iter_list": 12, "ensure_dir": 12, "ensure_dirpath_exist": 12, "extens": 12, "file2zip": 12, "zip": 12, "getsiz": 12, "is_using_in": 12, "hour": 12, "move_file_with_metadata": 12, "src": 12, "dst": 12, "path_nam": 12, "protect_dir": 12, "remove_ds_stor": 12, "ds_store": 12, "remove_path": 12, "rm_scratch_fil": 12, "rm_hidden_fil": 12, "single_ext": 12, "path_list": 12, "split_path": 12, "cyclic_slic": 12, "drop_repeat_str": 12, "min_length": 12, "max_length": 12, "drop_repeat_string_by_step": 12, "easy_split": 12, "extra_sep": 12, "extract_c": 12, "get_break": 12, "length": 12, "rubric": 12, "get_list_by_posit": 12, "break": 12, "15": 12, "get_single_list": 12, "start": 12, "is_rep": 12, "is_seq": 12, "num_str": 12, "join_uniqu": 12, "strs": 12, "punctuation_en2cn": 12, "assert": 12, "assert_columns_exist": 12, "assert_not_empty_str": 12, "skip_if_not_exist": 12, "assert_not_nul": 12, "assert_series_digit": 12, "assert_series_not_lik": 12, "assert_series_uniqu": 12, "assert_subset": 12, "superset": 12, "assert_values_in": 12, "enum": 12, "skip_column": 12, "district": 12, "if_not_uniqu": 12, "all": 12, "city_list": 12, "city_nam": 12, "static": 12, "get_city_name_by_id": 12, "city_id": 12, "full": 12, "is_citi": 12, "is_region": 12, "provinc": 12, "province_nam": 12, "region_list": 12, "city_full_short_map": 12, "city_id_shortname_map": 12, "city_short_full_map": 12, "city_shortname_id_map": 12, "ensure_city_nam": 12, "extract_possible_region": 12, "get_city_and_region": 12, "get_city_list": 12, "get_region_list": 12, "get_upload_region": 12, "bd_region": 12, "get_upload_street": 12, "if_many_valu": 12, "ls": 12, "action": 12, "norm_city_nam": 12, "region_full_city_map": 12, "region_short_city_map": 12, "postcod": 12, "get_city_from_postcod": 12, "postcode_city_map": 12, "random": 12, "ramdom_lnglat": 12, "lng_rang": 12, "72": 12, "138": 12, "lat_rang": 12, "56": 12, "random_by_prob": 12, "map": 12, "random_d": 12, "random_nam": 12, "random_room_numb": 12, "filter_by_dist": 12, "ind": 12, "dist": 12, "filter_by_limit": 12, "kdtree_nearest": 12, "xy_tre": 12, "xy_queri": 12, "kdtree_queri": 12, "kdtree_query_radius": 12, "add_bullet_list": 12, "add_hist_from_data": 12, "newlin": 12, "add_intense_quot": 12, "add_normal_p": 12, "add_order_list": 12, "add_paragraph_color": 12, "rgb": 12, "add_paragraph_r": 12, "add_table_from_df": 12, "add_titl": 12, "add_title_0": 12, "add_title_1": 12, "add_title_2": 12, "add_title_3": 12, "add_title_4": 12, "save": 12, "set_default_styl": 12, "media": 12, "get_mp3_metadata": 12, "mp3": 12}, "objects": {"ricco": [[12, 0, 0, "-", "base"]], "ricco.base": [[12, 1, 1, "", "agg_parser"], [12, 1, 1, "", "ensure_ext"], [12, 1, 1, "", "ensure_list"], [12, 1, 1, "", "is_empty"], [12, 1, 1, "", "log"], [12, 1, 1, "", "not_empty"], [12, 1, 1, "", "second_to_desc"], [12, 1, 1, "", "second_to_dhms"], [12, 1, 1, "", "warn_"]], "ricco.etl.data_reporter": [[1, 2, 1, "", "DataReporter"]], "ricco.etl.data_reporter.DataReporter": [[1, 3, 1, "", "basic"], [1, 3, 1, "", "col_by_col"], [1, 3, 1, "", "examine_all"], [1, 3, 1, "", "preprocess"]], "ricco.etl": [[3, 0, 0, "-", "entropy"], [3, 0, 0, "-", "extract"], [3, 0, 0, "-", "file"], [3, 0, 0, "-", "graph"], [3, 0, 0, "-", "load"], [11, 0, 0, "-", "stat"], [3, 0, 0, "-", "transformer"]], "ricco.etl.entropy": [[3, 2, 1, "", "EntropyClass"], [3, 1, 1, "", "entropy"], [3, 1, 1, "", "gevalue"], [3, 1, 1, "", "pca_score"], [3, 1, 1, "", "pvalue"], [3, 1, 1, "", "rescale"], [3, 1, 1, "", "standard_e"], [3, 1, 1, "", "standard_e_neg"], [3, 1, 1, "", "wvalue"]], "ricco.etl.extract": [[3, 1, 1, "", "get_kml_df_with_level"], [3, 1, 1, "", "kml_df_create_level"], [3, 1, 1, "", "rdf"], [3, 1, 1, "", "rdf_by_dir"], [3, 1, 1, "", "rdxls"], [3, 1, 1, "", "read_all_sheets"], [3, 1, 1, "", "read_csv"], [3, 1, 1, "", "read_gdb"], [3, 1, 1, "", "read_kml"], [3, 1, 1, "", "read_line_json"], [3, 1, 1, "", "read_oss"], [3, 1, 1, "", "read_shapefile"], [3, 1, 1, "", "read_shapefile_with_driver"], [3, 1, 1, "", "read_spss"]], "ricco.etl.file": [[3, 1, 1, "", "df_iter_by_column"], [3, 1, 1, "", "dir_file_to_x"], [3, 1, 1, "", "file_to_x"], [3, 1, 1, "", "gdb2csv"], [3, 1, 1, "", "merge_csv_files"], [3, 1, 1, "", "reshape_files"], [3, 1, 1, "", "split2x"], [3, 1, 1, "", "split2x_by_chunksize"], [3, 1, 1, "", "split2x_by_parts"], [3, 1, 1, "", "split_csv_by_column"]], "ricco.etl.graph": [[3, 1, 1, "", "get_graph_dict"], [3, 1, 1, "", "query_from_graph"]], "ricco.etl.load": [[3, 1, 1, "", "to_csv_by_line"], [3, 1, 1, "", "to_file"], [3, 1, 1, "", "to_oss"], [3, 1, 1, "", "to_parquet"], [3, 1, 1, "", "to_parts_file"], [3, 1, 1, "", "to_sheets"]], "ricco.etl.stat": [[11, 1, 1, "", "describe_auto"], [11, 1, 1, "", "describe_date"], [11, 1, 1, "", "describe_object"], [11, 1, 1, "", "describe_series"], [11, 1, 1, "", "suspect_series_type"]], "ricco.etl.transformer": [[3, 1, 1, "", "columns_contrast"], [3, 1, 1, "", "convert_date"], [3, 1, 1, "", "convert_to_float"], [3, 1, 1, "", "create_columns"], [3, 1, 1, "", "df_iter"], [3, 1, 1, "", "dict2df"], [3, 1, 1, "", "drop_by_df"], [3, 1, 1, "", "expand_dict"], [3, 1, 1, "", "expand_dict_silent"], [3, 1, 1, "", "expand_graph"], [3, 1, 1, "", "fillna_by_adding"], [3, 1, 1, "", "filter_by_df"], [3, 1, 1, "", "fix_null"], [3, 1, 1, "", "fuzz_df"], [3, 1, 1, "", "is_changed"], [3, 1, 1, "", "keep_best_unique"], [3, 1, 1, "", "merge_dfs"], [3, 1, 1, "", "null_if_in"], [3, 1, 1, "", "rolling_by_month"], [3, 1, 1, "", "round_by_columns"], [3, 1, 1, "", "shift_data"], [3, 1, 1, "", "split_list_to_row"], [3, 1, 1, "", "split_to_rows"], [3, 1, 1, "", "table2dict"], [3, 1, 1, "", "update_df"], [3, 1, 1, "", "wrap_dict"]], "ricco.fs.oss": [[4, 2, 1, "", "OssUtils"]], "ricco.fs.oss.OssUtils": [[4, 3, 1, "", "abspath"], [4, 3, 1, "", "dir_iter"], [4, 3, 1, "", "download"], [4, 3, 1, "", "exist"], [4, 3, 1, "", "mkdir"], [4, 3, 1, "", "object_path"], [4, 3, 1, "", "rm"], [4, 3, 1, "", "upload"]], "ricco.fs.sftp": [[4, 2, 1, "", "SFTP"]], "ricco.fs.sftp.SFTP": [[4, 3, 1, "", "chdir"], [4, 3, 1, "", "dir_iter"], [4, 3, 1, "", "download"], [4, 3, 1, "", "isdir"], [4, 3, 1, "", "isfile"], [4, 3, 1, "", "listdir"], [4, 4, 1, "", "workdir"]], "ricco.geocode": [[5, 0, 0, "-", "geocode"]], "ricco.geocode.geocode": [[5, 1, 1, "", "geocode"], [5, 1, 1, "", "geocode_best"], [5, 1, 1, "", "geocode_best_address"], [5, 1, 1, "", "geocode_best_poi"], [5, 1, 1, "", "geocode_df"]], "ricco.geometry": [[0, 0, 0, "-", "coord_trans"], [6, 0, 0, "-", "df"], [6, 0, 0, "-", "topology"], [6, 0, 0, "-", "util"]], "ricco.geometry.coord_trans": [[0, 2, 1, "", "SRS"], [0, 1, 1, "", "coord_trans_geom"], [0, 1, 1, "", "coord_trans_x2y"], [0, 1, 1, "", "coord_transform_geojson"], [0, 1, 1, "", "coord_transformer"], [0, 1, 1, "", "out_of_china"]], "ricco.geometry.coord_trans.SRS": [[0, 5, 1, "", "bd09"], [0, 5, 1, "", "gcj02"], [0, 5, 1, "", "wgs84"]], "ricco.geometry.df": [[6, 1, 1, "", "auto2shapely"], [6, 1, 1, "", "auto2x"], [6, 1, 1, "", "buffer"], [6, 1, 1, "", "distance_gdf"], [6, 1, 1, "", "distance_min"], [6, 1, 1, "", "ensure_geometry"], [6, 1, 1, "", "ensure_lnglat"], [6, 1, 1, "", "geojson2shapely"], [6, 1, 1, "", "geom_empty2null"], [6, 1, 1, "", "get_area"], [6, 1, 1, "", "get_neighbors"], [6, 1, 1, "", "get_projection_xy"], [6, 1, 1, "", "lnglat2shapely"], [6, 1, 1, "", "lnglat2wkb"], [6, 1, 1, "", "lnglat2wkt"], [6, 1, 1, "", "mark_tags_v2"], [6, 1, 1, "", "nearest_kdtree"], [6, 1, 1, "", "nearest_neighbor"], [6, 1, 1, "", "norm_geometry"], [6, 1, 1, "", "projection"], [6, 1, 1, "", "projection_lnglat"], [6, 1, 1, "", "shapely2central_shapely"], [6, 1, 1, "", "shapely2geojson"], [6, 1, 1, "", "shapely2lnglat"], [6, 1, 1, "", "shapely2wkb"], [6, 1, 1, "", "shapely2wkt"], [6, 1, 1, "", "shapely2x"], [6, 1, 1, "", "spatial_agg"], [6, 1, 1, "", "split_grids"], [6, 1, 1, "", "split_multi_to_rows"], [6, 1, 1, "", "wkb2lnglat"], [6, 1, 1, "", "wkb2shapely"], [6, 1, 1, "", "wkb2wkt"], [6, 1, 1, "", "wkt2lnglat"], [6, 1, 1, "", "wkt2shapely"], [6, 1, 1, "", "wkt2wkb"]], "ricco.geometry.topology": [[6, 1, 1, "", "fix_topology"], [6, 1, 1, "", "is_topology_valid"]], "ricco.geometry.util": [[6, 1, 1, "", "auto_loads"], [6, 1, 1, "", "crs_sh2000"], [6, 1, 1, "", "deg_to_decimal"], [6, 1, 1, "", "distance"], [6, 1, 1, "", "dumps2x"], [6, 1, 1, "", "ensure_lnglat"], [6, 1, 1, "", "ensure_multi_geom"], [6, 1, 1, "", "ensure_single_geom"], [6, 1, 1, "", "ensure_valid_polygon"], [6, 1, 1, "", "epsg_from_lnglat"], [6, 1, 1, "", "filter_polygon_from_collection"], [6, 1, 1, "", "geojson_dumps"], [6, 1, 1, "", "geojson_loads"], [6, 1, 1, "", "get_epsg"], [6, 1, 1, "", "get_inner_point"], [6, 1, 1, "", "infer_geom_format"], [6, 1, 1, "", "is_geojson"], [6, 1, 1, "", "is_line"], [6, 1, 1, "", "is_point"], [6, 1, 1, "", "is_polygon"], [6, 1, 1, "", "is_shapely"], [6, 1, 1, "", "is_valid_lnglat"], [6, 1, 1, "", "is_wkb"], [6, 1, 1, "", "is_wkt"], [6, 1, 1, "", "lng_from_city"], [6, 1, 1, "", "make_line"], [6, 1, 1, "", "multiline2multipolygon"], [6, 1, 1, "", "split_multi_geoms"], [6, 1, 1, "", "st_is_empty"], [6, 1, 1, "", "st_not_empty"], [6, 1, 1, "", "text2lnglats"], [6, 1, 1, "", "text2shapely"], [6, 1, 1, "", "wkb_dumps"], [6, 1, 1, "", "wkb_loads"], [6, 1, 1, "", "wkt_dumps"], [6, 1, 1, "", "wkt_loads"]], "ricco.util": [[12, 0, 0, "-", "assertion"], [2, 0, 0, "-", "decorator"], [12, 0, 0, "-", "district"], [12, 0, 0, "-", "docx"], [12, 0, 0, "-", "dt"], [12, 0, 0, "-", "kdtree"], [12, 0, 0, "-", "media"], [12, 0, 0, "-", "os"], [12, 0, 0, "-", "postcode"], [12, 0, 0, "-", "random"], [12, 0, 0, "-", "strings"], [12, 0, 0, "-", "util"]], "ricco.util.assertion": [[12, 1, 1, "", "assert_columns_exists"], [12, 1, 1, "", "assert_not_empty_str"], [12, 1, 1, "", "assert_not_null"], [12, 1, 1, "", "assert_series_digit"], [12, 1, 1, "", "assert_series_not_like"], [12, 1, 1, "", "assert_series_unique"], [12, 1, 1, "", "assert_subset"], [12, 1, 1, "", "assert_values_in"], [12, 1, 1, "", "skip_column"]], "ricco.util.decorator": [[2, 1, 1, "", "as_staticmethod"], [2, 1, 1, "", "check_null"], [2, 1, 1, "", "check_shapely"], [2, 1, 1, "", "check_str"], [2, 1, 1, "", "print_doc"], [2, 1, 1, "", "process_multi"], [2, 1, 1, "", "progress"], [2, 1, 1, "", "run_once"], [2, 1, 1, "", "timer"]], "ricco.util.district": [[12, 2, 1, "", "District"], [12, 1, 1, "", "city_full_short_mapping"], [12, 1, 1, "", "city_id_shortname_mapping"], [12, 1, 1, "", "city_short_full_mapping"], [12, 1, 1, "", "city_shortname_id_mapping"], [12, 1, 1, "", "ensure_city_name"], [12, 1, 1, "", "extract_city"], [12, 1, 1, "", "extract_possible_region"], [12, 1, 1, "", "get_city_and_region"], [12, 1, 1, "", "get_city_id_by_name"], [12, 1, 1, "", "get_city_list"], [12, 1, 1, "", "get_city_name_by_id"], [12, 1, 1, "", "get_region_list"], [12, 1, 1, "", "get_upload_region"], [12, 1, 1, "", "get_upload_street"], [12, 1, 1, "", "if_many_value"], [12, 1, 1, "", "is_city"], [12, 1, 1, "", "is_region"], [12, 1, 1, "", "norm_city_name"], [12, 1, 1, "", "region_full_city_mapping"], [12, 1, 1, "", "region_short_city_mapping"]], "ricco.util.district.District": [[12, 3, 1, "", "city"], [12, 4, 1, "", "city_list"], [12, 3, 1, "", "city_names"], [12, 3, 1, "", "get_city_id_by_name"], [12, 3, 1, "", "get_city_name_by_id"], [12, 3, 1, "", "is_city"], [12, 3, 1, "", "is_region"], [12, 3, 1, "", "province"], [12, 3, 1, "", "province_names"], [12, 4, 1, "", "region_list"]], "ricco.util.docx": [[12, 2, 1, "", "Docx"]], "ricco.util.docx.Docx": [[12, 3, 1, "", "add_bullet_list"], [12, 3, 1, "", "add_hist_from_data"], [12, 3, 1, "", "add_intense_quote"], [12, 3, 1, "", "add_normal_p"], [12, 3, 1, "", "add_order_list"], [12, 3, 1, "", "add_paragraph_color"], [12, 3, 1, "", "add_paragraph_red"], [12, 3, 1, "", "add_table_from_df"], [12, 3, 1, "", "add_title"], [12, 3, 1, "", "add_title_0"], [12, 3, 1, "", "add_title_1"], [12, 3, 1, "", "add_title_2"], [12, 3, 1, "", "add_title_3"], [12, 3, 1, "", "add_title_4"], [12, 3, 1, "", "save"], [12, 3, 1, "", "set_default_style"]], "ricco.util.dt": [[12, 2, 1, "", "DT"], [12, 2, 1, "", "DT2"], [12, 1, 1, "", "auto2date"], [12, 1, 1, "", "excel2date"], [12, 1, 1, "", "infer_format"], [12, 1, 1, "", "is_valid_date"], [12, 1, 1, "", "to_str"]], "ricco.util.dt.DT": [[12, 3, 1, "", "date_move"], [12, 4, 1, "", "day_half_year_ago"], [12, 4, 1, "", "first_day_of_this_month"], [12, 4, 1, "", "last_day_of_this_month"], [12, 4, 1, "", "monday_of_this_week"], [12, 4, 1, "", "one_year_ago"], [12, 4, 1, "", "the_day_after_tomorrow"], [12, 4, 1, "", "the_day_before_yesterday"], [12, 4, 1, "", "today"], [12, 4, 1, "", "tomorrow"], [12, 4, 1, "", "yesterday"]], "ricco.util.dt.DT2": [[12, 3, 1, "", "date_move"], [12, 4, 1, "", "day_half_year_ago"], [12, 4, 1, "", "first_day_of_this_month"], [12, 3, 1, "", "get"], [12, 4, 1, "", "last_day_of_this_month"], [12, 4, 1, "", "monday_of_this_week"], [12, 4, 1, "", "one_year_ago"], [12, 4, 1, "", "the_day_after_tomorrow"], [12, 4, 1, "", "the_day_before_yesterday"], [12, 4, 1, "", "today"], [12, 4, 1, "", "tomorrow"], [12, 4, 1, "", "yesterday"]], "ricco.util.kdtree": [[12, 1, 1, "", "filter_by_dist"], [12, 1, 1, "", "filter_by_limit"], [12, 1, 1, "", "kdtree_nearest"], [12, 1, 1, "", "kdtree_query"], [12, 1, 1, "", "kdtree_query_radius"]], "ricco.util.media": [[12, 1, 1, "", "get_mp3_metadata"]], "ricco.util.os": [[12, 1, 1, "", "count_files"], [12, 1, 1, "", "dir2zip"], [12, 1, 1, "", "dir_iter"], [12, 1, 1, "", "dir_iter_list"], [12, 1, 1, "", "ensure_dir"], [12, 1, 1, "", "ensure_dirpath_exist"], [12, 1, 1, "", "ext"], [12, 1, 1, "", "extension"], [12, 1, 1, "", "file2zip"], [12, 1, 1, "", "fn"], [12, 1, 1, "", "getsize"], [12, 1, 1, "", "is_using_in"], [12, 1, 1, "", "move_file_with_metadata"], [12, 1, 1, "", "path_name"], [12, 1, 1, "", "protect_dir"], [12, 1, 1, "", "remove_ds_store"], [12, 1, 1, "", "remove_path"], [12, 1, 1, "", "rm_scratch_file"], [12, 1, 1, "", "single_ext"], [12, 1, 1, "", "split_path"]], "ricco.util.postcode": [[12, 1, 1, "", "get_city_from_postcode"], [12, 1, 1, "", "postcode_city_mapping"]], "ricco.util.random": [[12, 1, 1, "", "ramdom_lnglat"], [12, 1, 1, "", "random_by_prob"], [12, 1, 1, "", "random_date"], [12, 1, 1, "", "random_name"], [12, 1, 1, "", "random_room_number"]], "ricco.util.strings": [[12, 1, 1, "", "cyclic_slice"], [12, 1, 1, "", "drop_repeat_string"], [12, 1, 1, "", "drop_repeat_string_by_step"], [12, 1, 1, "", "easy_split"], [12, 1, 1, "", "extract_city"], [12, 1, 1, "", "get_breaks"], [12, 1, 1, "", "get_list_by_position"], [12, 1, 1, "", "get_single_list"], [12, 1, 1, "", "is_repeated"], [12, 1, 1, "", "is_seq"], [12, 1, 1, "", "join_unique"], [12, 1, 1, "", "punctuation_en2cn"]], "ricco.util.util": [[12, 1, 1, "", "and_"], [12, 1, 1, "", "check_diff"], [12, 1, 1, "", "diff"], [12, 1, 1, "", "drop_repeat"], [12, 1, 1, "", "eval_"], [12, 1, 1, "", "extract_num"], [12, 1, 1, "", "first_notnull_value"], [12, 1, 1, "", "fix_sql"], [12, 1, 1, "", "fix_str"], [12, 1, 1, "", "fuzz_match"], [12, 1, 1, "", "fuzz_pair"], [12, 1, 1, "", "get_city_id_by_name"], [12, 1, 1, "", "get_shortest_element"], [12, 1, 1, "", "get_uuid"], [12, 1, 1, "", "house_type_format"], [12, 1, 1, "", "interchange_dict"], [12, 1, 1, "", "is_digit"], [12, 1, 1, "", "is_hex"], [12, 1, 1, "", "is_unique_series"], [12, 1, 1, "", "is_valid_uuid"], [12, 1, 1, "", "isinstance_in_list"], [12, 1, 1, "", "list2dict"], [12, 1, 1, "", "or_"], [12, 1, 1, "", "per2float"], [12, 1, 1, "", "physical_age"], [12, 1, 1, "", "pinyin"], [12, 1, 1, "", "re_fast"], [12, 1, 1, "", "relstrip"], [12, 1, 1, "", "remove_null_in_dict"], [12, 1, 1, "", "rerstrip"], [12, 1, 1, "", "rstrip_d0"], [12, 1, 1, "", "segment"], [12, 1, 1, "", "sort_by_list"], [12, 1, 1, "", "to_bool"], [12, 1, 1, "", "to_float"], [12, 1, 1, "", "to_json_string"], [12, 1, 1, "", "to_str_list"], [12, 1, 1, "", "union_list_v2"], [12, 1, 1, "", "union_str_v2"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python \u6a21\u5757"], "1": ["py", "function", "Python \u51fd\u6570"], "2": ["py", "class", "Python \u7c7b"], "3": ["py", "method", "Python \u65b9\u6cd5"], "4": ["py", "property", "Python \u6258\u7ba1\u5c5e\u6027"], "5": ["py", "attribute", "Python \u5c5e\u6027"]}, "titleterms": {"extract": 3, "transform": 3, "load": 3, "file": 3, "graph": 3, "filesystem": 4, "oss": [4, 10], "sftp": 4, "geocod": 5, "geodatafram": 6, "ricco": 7, "indic": 7, "and": 7, "tabl": 7, "jupyt": 8, "reshap": 9, "shape": 9, "buffer": 9, "kdtree": 12, "word": 12}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"\u5750\u6807\u8f6c\u6362": [[0, "module-ricco.geometry.coord_trans"]], "\u6570\u636e\u62a5\u544a": [[1, "id1"]], "\u6570\u636e\u6821\u9a8c": [[1, "id2"], [12, "module-ricco.util.assertion"]], "\u88c5\u9970\u5668": [[2, "module-ricco.util.decorator"]], "\u6570\u636e\u8bfb\u53d6\u3001\u5904\u7406\u4e0e\u4fdd\u5b58": [[3, "id1"]], "\u6570\u636e\u8bfb\u53d6\uff08Extract\uff09": [[3, "module-ricco.etl.extract"]], "\u6570\u636e\u5904\u7406\uff08Transform\uff09": [[3, "module-ricco.etl.transformer"]], "\u6570\u636e\u4fdd\u5b58\uff08Load\uff09": [[3, "module-ricco.etl.load"]], "\u6587\u4ef6\u64cd\u4f5c\uff08File\uff09": [[3, "module-ricco.etl.file"]], "\u6570\u636e\u6807\u51c6\u5316\uff08\u71b5\u503c\u6cd5\uff09": [[3, "module-ricco.etl.entropy"]], "\u56fe\u6570\u636e\u5904\u7406\uff08Graph\uff09": [[3, "module-ricco.etl.graph"]], "FileSystem\u5de5\u5177\u96c6": [[4, "filesystem"]], "OSS": [[4, "oss"]], "SFTP": [[4, "sftp"]], "Geocoding": [[5, "module-ricco.geocode.geocode"]], "\u5730\u7406\u5904\u7406": [[6, "id1"], [9, "id9"]], "\u57fa\u7840\u5730\u7406\u5904\u7406\u5de5\u5177": [[6, "module-ricco.geometry.util"]], "\u57fa\u4e8eGeoDataframe\u5904\u7406": [[6, "module-ricco.geometry.df"]], "\u62d3\u6251\u5904\u7406": [[6, "module-ricco.geometry.topology"]], "ricco \u6587\u6863": [[7, "ricco"]], "\u76ee\u5f55:": [[7, null]], "Indices and tables": [[7, "indices-and-tables"]], "\u5b89\u88c5": [[8, "id1"]], "\u5b89\u88c5\u6b65\u9aa4": [[8, "id2"]], "\u5728jupyter\u4e2d\u5207\u6362\u865a\u62df\u73af\u5883": [[8, "jupyter"]], "\u2605\u2605\u5b9e\u7528\u65b9\u6cd5\u63a8\u8350\u2605\u2605": [[9, "id1"]], "\u6570\u636e\u8bfb\u5199": [[9, "id2"]], "\u8bfb\u53d6\u5355\u4e2a\u6587\u4ef6": [[9, "id3"]], "\u8bfb\u53d6\u6587\u4ef6\u5939": [[9, "id4"]], "\u4fdd\u5b58\u6587\u4ef6": [[9, "id5"]], "\u6587\u4ef6\u5904\u7406": [[9, "id6"]], "\u6587\u4ef6\u62c6\u5206": [[9, "id7"]], "\u6587\u4ef6\u6279\u91cf\u5904\u7406reshape": [[9, "reshape"]], "\u4e07\u80fd\u683c\u5f0f\u8f6c\u6362": [[9, "id8"]], "\u81ea\u52a8\u8f6c\u4e3ashapely\u683c\u5f0f": [[9, "shapely"]], "shapely\u8f6c\u4e3a\u4efb\u610f\u683c\u5f0f": [[9, "id10"], [9, "id11"]], "\u7a7a\u95f4\u8ba1\u7b97": [[9, "id12"]], "\u6295\u5f71\u53d8\u6362": [[9, "id13"]], "\u9762\u79ef\u8ba1\u7b97": [[9, "id14"]], "\u8fd1\u90bb\u5206\u6790": [[9, "id15"]], "buffer\u8ba1\u7b97": [[9, "buffer"]], "\u7a7a\u95f4\u7edf\u8ba1": [[9, "id16"]], "\u7a7a\u95f4\u8fde\u63a5\u6253\u6807\u7b7e": [[9, "id17"]], "OSS\u5de5\u5177\u96c6": [[10, "oss"]], "\u7edf\u8ba1\u5206\u6790": [[11, "id1"]], "\u63cf\u8ff0\u6027\u7edf\u8ba1": [[11, "module-ricco.etl.stat"]], "\u5de5\u5177\u96c6": [[12, "id1"]], "\u57fa\u7840\u5de5\u5177\u4e00": [[12, "module-ricco.base"]], "\u57fa\u7840\u5de5\u5177\u4e8c": [[12, "module-ricco.util.util"]], "\u65f6\u95f4\u548c\u65e5\u671f": [[12, "module-ricco.util.dt"]], "\u6587\u4ef6\u8def\u5f84": [[12, "module-ricco.util.os"]], "\u5b57\u7b26\u4e32\u5904\u7406": [[12, "module-ricco.util.strings"]], "\u884c\u653f\u533a\u5212\u5de5\u5177": [[12, "module-ricco.util.district"]], "\u968f\u673a\u5de5\u5177": [[12, "module-ricco.util.random"]], "Kdtree": [[12, "module-ricco.util.kdtree"]], "Word\u6587\u6863\u5904\u7406": [[12, "module-ricco.util.docx"]], "\u591a\u5a92\u4f53\u6587\u4ef6\u5904\u7406": [[12, "module-ricco.util.media"]]}, "indexentries": {"srs\uff08ricco.geometry.coord_trans \u4e2d\u7684\u7c7b\uff09": [[0, "ricco.geometry.coord_trans.SRS"]], "bd09\uff08ricco.geometry.coord_trans.srs \u5c5e\u6027\uff09": [[0, "ricco.geometry.coord_trans.SRS.bd09"]], "coord_trans_geom()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.coord_trans_geom"]], "coord_trans_x2y()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.coord_trans_x2y"]], "coord_transform_geojson()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.coord_transform_geojson"]], "coord_transformer()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.coord_transformer"]], "gcj02\uff08ricco.geometry.coord_trans.srs \u5c5e\u6027\uff09": [[0, "ricco.geometry.coord_trans.SRS.gcj02"]], "module": [[0, "module-ricco.geometry.coord_trans"], [2, "module-ricco.util.decorator"], [3, "module-ricco.etl.entropy"], [3, "module-ricco.etl.extract"], [3, "module-ricco.etl.file"], [3, "module-ricco.etl.graph"], [3, "module-ricco.etl.load"], [3, "module-ricco.etl.transformer"], [5, "module-ricco.geocode.geocode"], [6, "module-ricco.geometry.df"], [6, "module-ricco.geometry.topology"], [6, "module-ricco.geometry.util"], [11, "module-ricco.etl.stat"], [12, "module-ricco.base"], [12, "module-ricco.util.assertion"], [12, "module-ricco.util.district"], [12, "module-ricco.util.docx"], [12, "module-ricco.util.dt"], [12, "module-ricco.util.kdtree"], [12, "module-ricco.util.media"], [12, "module-ricco.util.os"], [12, "module-ricco.util.postcode"], [12, "module-ricco.util.random"], [12, "module-ricco.util.strings"], [12, "module-ricco.util.util"]], "out_of_china()\uff08\u5728 ricco.geometry.coord_trans \u6a21\u5757\u4e2d\uff09": [[0, "ricco.geometry.coord_trans.out_of_china"]], "ricco.geometry.coord_trans": [[0, "module-ricco.geometry.coord_trans"]], "wgs84\uff08ricco.geometry.coord_trans.srs \u5c5e\u6027\uff09": [[0, "ricco.geometry.coord_trans.SRS.wgs84"]], "datareporter\uff08ricco.etl.data_reporter \u4e2d\u7684\u7c7b\uff09": [[1, "ricco.etl.data_reporter.DataReporter"]], "basic() \uff08ricco.etl.data_reporter.datareporter \u65b9\u6cd5\uff09": [[1, "ricco.etl.data_reporter.DataReporter.basic"]], "col_by_col() \uff08ricco.etl.data_reporter.datareporter \u65b9\u6cd5\uff09": [[1, "ricco.etl.data_reporter.DataReporter.col_by_col"]], "examine_all() \uff08ricco.etl.data_reporter.datareporter \u65b9\u6cd5\uff09": [[1, "ricco.etl.data_reporter.DataReporter.examine_all"]], "preprocess() \uff08ricco.etl.data_reporter.datareporter \u65b9\u6cd5\uff09": [[1, "ricco.etl.data_reporter.DataReporter.preprocess"]], "as_staticmethod()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.as_staticmethod"]], "check_null()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.check_null"]], "check_shapely()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.check_shapely"]], "check_str()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.check_str"]], "print_doc()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.print_doc"]], "process_multi()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.process_multi"]], "progress()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.progress"]], "ricco.util.decorator": [[2, "module-ricco.util.decorator"]], "run_once()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.run_once"]], "timer()\uff08\u5728 ricco.util.decorator \u6a21\u5757\u4e2d\uff09": [[2, "ricco.util.decorator.timer"]], "entropyclass\uff08ricco.etl.entropy \u4e2d\u7684\u7c7b\uff09": [[3, "ricco.etl.entropy.EntropyClass"]], "columns_contrast()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.columns_contrast"]], "convert_date()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.convert_date"]], "convert_to_float()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.convert_to_float"]], "create_columns()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.create_columns"]], "df_iter()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.df_iter"]], "df_iter_by_column()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.df_iter_by_column"]], "dict2df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.dict2df"]], "dir_file_to_x()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.dir_file_to_x"]], "drop_by_df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.drop_by_df"]], "entropy()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.entropy"]], "expand_dict()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.expand_dict"]], "expand_dict_silent()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.expand_dict_silent"]], "expand_graph()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.expand_graph"]], "file_to_x()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.file_to_x"]], "fillna_by_adding()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.fillna_by_adding"]], "filter_by_df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.filter_by_df"]], "fix_null()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.fix_null"]], "fuzz_df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.fuzz_df"]], "gdb2csv()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.gdb2csv"]], "get_graph_dict()\uff08\u5728 ricco.etl.graph \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.graph.get_graph_dict"]], "get_kml_df_with_level()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.get_kml_df_with_level"]], "gevalue()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.gevalue"]], "is_changed()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.is_changed"]], "keep_best_unique()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.keep_best_unique"]], "kml_df_create_level()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.kml_df_create_level"]], "merge_csv_files()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.merge_csv_files"]], "merge_dfs()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.merge_dfs"]], "null_if_in()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.null_if_in"]], "pca_score()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.pca_score"]], "pvalue()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.pvalue"]], "query_from_graph()\uff08\u5728 ricco.etl.graph \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.graph.query_from_graph"]], "rdf()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.rdf"]], "rdf_by_dir()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.rdf_by_dir"]], "rdxls()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.rdxls"]], "read_all_sheets()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_all_sheets"]], "read_csv()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_csv"]], "read_gdb()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_gdb"]], "read_kml()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_kml"]], "read_line_json()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_line_json"]], "read_oss()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_oss"]], "read_shapefile()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_shapefile"]], "read_shapefile_with_driver()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_shapefile_with_driver"]], "read_spss()\uff08\u5728 ricco.etl.extract \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.extract.read_spss"]], "rescale()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.rescale"]], "reshape_files()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.reshape_files"]], "ricco.etl.entropy": [[3, "module-ricco.etl.entropy"]], "ricco.etl.extract": [[3, "module-ricco.etl.extract"]], "ricco.etl.file": [[3, "module-ricco.etl.file"]], "ricco.etl.graph": [[3, "module-ricco.etl.graph"]], "ricco.etl.load": [[3, "module-ricco.etl.load"]], "ricco.etl.transformer": [[3, "module-ricco.etl.transformer"]], "rolling_by_month()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.rolling_by_month"]], "round_by_columns()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.round_by_columns"]], "shift_data()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.shift_data"]], "split2x()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.split2x"]], "split2x_by_chunksize()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.split2x_by_chunksize"]], "split2x_by_parts()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.split2x_by_parts"]], "split_csv_by_column()\uff08\u5728 ricco.etl.file \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.file.split_csv_by_column"]], "split_list_to_row()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.split_list_to_row"]], "split_to_rows()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.split_to_rows"]], "standard_e()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.standard_e"]], "standard_e_neg()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.standard_e_neg"]], "table2dict()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.table2dict"]], "to_csv_by_line()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_csv_by_line"]], "to_file()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_file"]], "to_oss()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_oss"]], "to_parquet()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_parquet"]], "to_parts_file()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_parts_file"]], "to_sheets()\uff08\u5728 ricco.etl.load \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.load.to_sheets"]], "update_df()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.update_df"]], "wrap_dict()\uff08\u5728 ricco.etl.transformer \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.transformer.wrap_dict"]], "wvalue()\uff08\u5728 ricco.etl.entropy \u6a21\u5757\u4e2d\uff09": [[3, "ricco.etl.entropy.wvalue"]], "ossutils\uff08ricco.fs.oss \u4e2d\u7684\u7c7b\uff09": [[4, "ricco.fs.oss.OssUtils"]], "sftp\uff08ricco.fs.sftp \u4e2d\u7684\u7c7b\uff09": [[4, "ricco.fs.sftp.SFTP"]], "abspath() \uff08ricco.fs.oss.ossutils \u65b9\u6cd5\uff09": [[4, "ricco.fs.oss.OssUtils.abspath"]], "chdir() \uff08ricco.fs.sftp.sftp \u65b9\u6cd5\uff09": [[4, "ricco.fs.sftp.SFTP.chdir"]], "dir_iter() \uff08ricco.fs.oss.ossutils \u65b9\u6cd5\uff09": [[4, "ricco.fs.oss.OssUtils.dir_iter"]], "dir_iter() \uff08ricco.fs.sftp.sftp \u65b9\u6cd5\uff09": [[4, "ricco.fs.sftp.SFTP.dir_iter"]], "download() \uff08ricco.fs.oss.ossutils \u65b9\u6cd5\uff09": [[4, "ricco.fs.oss.OssUtils.download"]], "download() \uff08ricco.fs.sftp.sftp \u65b9\u6cd5\uff09": [[4, "ricco.fs.sftp.SFTP.download"]], "exist() \uff08ricco.fs.oss.ossutils \u65b9\u6cd5\uff09": [[4, "ricco.fs.oss.OssUtils.exist"]], "isdir() \uff08ricco.fs.sftp.sftp \u65b9\u6cd5\uff09": [[4, "ricco.fs.sftp.SFTP.isdir"]], "isfile() \uff08ricco.fs.sftp.sftp \u65b9\u6cd5\uff09": [[4, "ricco.fs.sftp.SFTP.isfile"]], "listdir() \uff08ricco.fs.sftp.sftp \u65b9\u6cd5\uff09": [[4, "ricco.fs.sftp.SFTP.listdir"]], "mkdir() \uff08ricco.fs.oss.ossutils \u65b9\u6cd5\uff09": [[4, "ricco.fs.oss.OssUtils.mkdir"]], "object_path() \uff08ricco.fs.oss.ossutils \u65b9\u6cd5\uff09": [[4, "ricco.fs.oss.OssUtils.object_path"]], "rm() \uff08ricco.fs.oss.ossutils \u65b9\u6cd5\uff09": [[4, "ricco.fs.oss.OssUtils.rm"]], "upload() \uff08ricco.fs.oss.ossutils \u65b9\u6cd5\uff09": [[4, "ricco.fs.oss.OssUtils.upload"]], "workdir\uff08ricco.fs.sftp.sftp \u5c5e\u6027\uff09": [[4, "ricco.fs.sftp.SFTP.workdir"]], "geocode()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geocode.geocode.geocode"]], "geocode_best()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geocode.geocode.geocode_best"]], "geocode_best_address()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geocode.geocode.geocode_best_address"]], "geocode_best_poi()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geocode.geocode.geocode_best_poi"]], "geocode_df()\uff08\u5728 ricco.geocode.geocode \u6a21\u5757\u4e2d\uff09": [[5, "ricco.geocode.geocode.geocode_df"]], "ricco.geocode.geocode": [[5, "module-ricco.geocode.geocode"]], "auto2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.auto2shapely"]], "auto2x()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.auto2x"]], "auto_loads()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.auto_loads"]], "buffer()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.buffer"]], "crs_sh2000()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.crs_sh2000"]], "deg_to_decimal()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.deg_to_decimal"]], "distance()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.distance"]], "distance_gdf()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.distance_gdf"]], "distance_min()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.distance_min"]], "dumps2x()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.dumps2x"]], "ensure_geometry()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.ensure_geometry"]], "ensure_lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.ensure_lnglat"]], "ensure_lnglat()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.ensure_lnglat"]], "ensure_multi_geom()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.ensure_multi_geom"]], "ensure_single_geom()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.ensure_single_geom"]], "ensure_valid_polygon()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.ensure_valid_polygon"]], "epsg_from_lnglat()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.epsg_from_lnglat"]], "filter_polygon_from_collection()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.filter_polygon_from_collection"]], "fix_topology()\uff08\u5728 ricco.geometry.topology \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.topology.fix_topology"]], "geojson2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.geojson2shapely"]], "geojson_dumps()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.geojson_dumps"]], "geojson_loads()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.geojson_loads"]], "geom_empty2null()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.geom_empty2null"]], "get_area()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.get_area"]], "get_epsg()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.get_epsg"]], "get_inner_point()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.get_inner_point"]], "get_neighbors()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.get_neighbors"]], "get_projection_xy()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.get_projection_xy"]], "infer_geom_format()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.infer_geom_format"]], "is_geojson()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.is_geojson"]], "is_line()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.is_line"]], "is_point()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.is_point"]], "is_polygon()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.is_polygon"]], "is_shapely()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.is_shapely"]], "is_topology_valid()\uff08\u5728 ricco.geometry.topology \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.topology.is_topology_valid"]], "is_valid_lnglat()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.is_valid_lnglat"]], "is_wkb()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.is_wkb"]], "is_wkt()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.is_wkt"]], "lng_from_city()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.lng_from_city"]], "lnglat2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.lnglat2shapely"]], "lnglat2wkb()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.lnglat2wkb"]], "lnglat2wkt()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.lnglat2wkt"]], "make_line()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.make_line"]], "mark_tags_v2()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.mark_tags_v2"]], "multiline2multipolygon()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.multiline2multipolygon"]], "nearest_kdtree()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.nearest_kdtree"]], "nearest_neighbor()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.nearest_neighbor"]], "norm_geometry()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.norm_geometry"]], "projection()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.projection"]], "projection_lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.projection_lnglat"]], "ricco.geometry.df": [[6, "module-ricco.geometry.df"]], "ricco.geometry.topology": [[6, "module-ricco.geometry.topology"]], "ricco.geometry.util": [[6, "module-ricco.geometry.util"]], "shapely2central_shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.shapely2central_shapely"]], "shapely2geojson()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.shapely2geojson"]], "shapely2lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.shapely2lnglat"]], "shapely2wkb()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.shapely2wkb"]], "shapely2wkt()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.shapely2wkt"]], "shapely2x()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.shapely2x"]], "spatial_agg()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.spatial_agg"]], "split_grids()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.split_grids"]], "split_multi_geoms()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.split_multi_geoms"]], "split_multi_to_rows()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.split_multi_to_rows"]], "st_is_empty()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.st_is_empty"]], "st_not_empty()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.st_not_empty"]], "text2lnglats()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.text2lnglats"]], "text2shapely()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.text2shapely"]], "wkb2lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.wkb2lnglat"]], "wkb2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.wkb2shapely"]], "wkb2wkt()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.wkb2wkt"]], "wkb_dumps()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.wkb_dumps"]], "wkb_loads()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.wkb_loads"]], "wkt2lnglat()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.wkt2lnglat"]], "wkt2shapely()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.wkt2shapely"]], "wkt2wkb()\uff08\u5728 ricco.geometry.df \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.df.wkt2wkb"]], "wkt_dumps()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.wkt_dumps"]], "wkt_loads()\uff08\u5728 ricco.geometry.util \u6a21\u5757\u4e2d\uff09": [[6, "ricco.geometry.util.wkt_loads"]], "describe_auto()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[11, "ricco.etl.stat.describe_auto"]], "describe_date()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[11, "ricco.etl.stat.describe_date"]], "describe_object()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[11, "ricco.etl.stat.describe_object"]], "describe_series()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[11, "ricco.etl.stat.describe_series"]], "ricco.etl.stat": [[11, "module-ricco.etl.stat"]], "suspect_series_type()\uff08\u5728 ricco.etl.stat \u6a21\u5757\u4e2d\uff09": [[11, "ricco.etl.stat.suspect_series_type"]], "dt2\uff08ricco.util.dt \u4e2d\u7684\u7c7b\uff09": [[12, "ricco.util.dt.DT2"]], "dt\uff08ricco.util.dt \u4e2d\u7684\u7c7b\uff09": [[12, "ricco.util.dt.DT"]], "district\uff08ricco.util.district \u4e2d\u7684\u7c7b\uff09": [[12, "ricco.util.district.District"]], "docx\uff08ricco.util.docx \u4e2d\u7684\u7c7b\uff09": [[12, "ricco.util.docx.Docx"]], "add_bullet_list() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_bullet_list"]], "add_hist_from_data() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_hist_from_data"]], "add_intense_quote() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_intense_quote"]], "add_normal_p() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_normal_p"]], "add_order_list() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_order_list"]], "add_paragraph_color() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_paragraph_color"]], "add_paragraph_red() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_paragraph_red"]], "add_table_from_df() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_table_from_df"]], "add_title() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_title"]], "add_title_0() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_title_0"]], "add_title_1() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_title_1"]], "add_title_2() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_title_2"]], "add_title_3() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_title_3"]], "add_title_4() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.add_title_4"]], "agg_parser()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.agg_parser"]], "and_()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.and_"]], "assert_columns_exists()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.assert_columns_exists"]], "assert_not_empty_str()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.assert_not_empty_str"]], "assert_not_null()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.assert_not_null"]], "assert_series_digit()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.assert_series_digit"]], "assert_series_not_like()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.assert_series_not_like"]], "assert_series_unique()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.assert_series_unique"]], "assert_subset()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.assert_subset"]], "assert_values_in()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.assert_values_in"]], "auto2date()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.dt.auto2date"]], "check_diff()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.check_diff"]], "city() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[12, "ricco.util.district.District.city"]], "city_full_short_mapping()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.city_full_short_mapping"]], "city_id_shortname_mapping()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.city_id_shortname_mapping"]], "city_list\uff08ricco.util.district.district \u5c5e\u6027\uff09": [[12, "ricco.util.district.District.city_list"]], "city_names() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[12, "ricco.util.district.District.city_names"]], "city_short_full_mapping()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.city_short_full_mapping"]], "city_shortname_id_mapping()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.city_shortname_id_mapping"]], "count_files()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.count_files"]], "cyclic_slice()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.cyclic_slice"]], "date_move() \uff08ricco.util.dt.dt \u65b9\u6cd5\uff09": [[12, "ricco.util.dt.DT.date_move"]], "date_move() \uff08ricco.util.dt.dt2 \u65b9\u6cd5\uff09": [[12, "ricco.util.dt.DT2.date_move"]], "day_half_year_ago\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.day_half_year_ago"]], "day_half_year_ago\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.day_half_year_ago"]], "diff()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.diff"]], "dir2zip()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.dir2zip"]], "dir_iter()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.dir_iter"]], "dir_iter_list()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.dir_iter_list"]], "drop_repeat()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.drop_repeat"]], "drop_repeat_string()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.drop_repeat_string"]], "drop_repeat_string_by_step()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.drop_repeat_string_by_step"]], "easy_split()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.easy_split"]], "ensure_city_name()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.ensure_city_name"]], "ensure_dir()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.ensure_dir"]], "ensure_dirpath_exist()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.ensure_dirpath_exist"]], "ensure_ext()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.ensure_ext"]], "ensure_list()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.ensure_list"]], "eval_()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.eval_"]], "excel2date()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.dt.excel2date"]], "ext()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.ext"]], "extension()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.extension"]], "extract_city()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.extract_city"]], "extract_city()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.extract_city"]], "extract_num()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.extract_num"]], "extract_possible_region()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.extract_possible_region"]], "file2zip()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.file2zip"]], "filter_by_dist()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.kdtree.filter_by_dist"]], "filter_by_limit()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.kdtree.filter_by_limit"]], "first_day_of_this_month\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.first_day_of_this_month"]], "first_day_of_this_month\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.first_day_of_this_month"]], "first_notnull_value()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.first_notnull_value"]], "fix_sql()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.fix_sql"]], "fix_str()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.fix_str"]], "fn()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.fn"]], "fuzz_match()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.fuzz_match"]], "fuzz_pair()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.fuzz_pair"]], "get() \uff08ricco.util.dt.dt2 \u65b9\u6cd5\uff09": [[12, "ricco.util.dt.DT2.get"]], "get_breaks()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.get_breaks"]], "get_city_and_region()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.get_city_and_region"]], "get_city_from_postcode()\uff08\u5728 ricco.util.postcode \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.postcode.get_city_from_postcode"]], "get_city_id_by_name()\uff08ricco.util.district.district \u9759\u6001\u65b9\u6cd5\uff09": [[12, "ricco.util.district.District.get_city_id_by_name"]], "get_city_id_by_name()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.get_city_id_by_name"]], "get_city_id_by_name()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.get_city_id_by_name"]], "get_city_list()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.get_city_list"]], "get_city_name_by_id()\uff08ricco.util.district.district \u9759\u6001\u65b9\u6cd5\uff09": [[12, "ricco.util.district.District.get_city_name_by_id"]], "get_city_name_by_id()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.get_city_name_by_id"]], "get_list_by_position()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.get_list_by_position"]], "get_mp3_metadata()\uff08\u5728 ricco.util.media \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.media.get_mp3_metadata"]], "get_region_list()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.get_region_list"]], "get_shortest_element()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.get_shortest_element"]], "get_single_list()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.get_single_list"]], "get_upload_region()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.get_upload_region"]], "get_upload_street()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.get_upload_street"]], "get_uuid()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.get_uuid"]], "getsize()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.getsize"]], "house_type_format()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.house_type_format"]], "if_many_value()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.if_many_value"]], "infer_format()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.dt.infer_format"]], "interchange_dict()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.interchange_dict"]], "is_city()\uff08ricco.util.district.district \u9759\u6001\u65b9\u6cd5\uff09": [[12, "ricco.util.district.District.is_city"]], "is_city()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.is_city"]], "is_digit()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.is_digit"]], "is_empty()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.is_empty"]], "is_hex()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.is_hex"]], "is_region()\uff08ricco.util.district.district \u9759\u6001\u65b9\u6cd5\uff09": [[12, "ricco.util.district.District.is_region"]], "is_region()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.is_region"]], "is_repeated()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.is_repeated"]], "is_seq()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.is_seq"]], "is_unique_series()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.is_unique_series"]], "is_using_in()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.is_using_in"]], "is_valid_date()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.dt.is_valid_date"]], "is_valid_uuid()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.is_valid_uuid"]], "isinstance_in_list()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.isinstance_in_list"]], "join_unique()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.join_unique"]], "kdtree_nearest()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.kdtree.kdtree_nearest"]], "kdtree_query()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.kdtree.kdtree_query"]], "kdtree_query_radius()\uff08\u5728 ricco.util.kdtree \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.kdtree.kdtree_query_radius"]], "last_day_of_this_month\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.last_day_of_this_month"]], "last_day_of_this_month\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.last_day_of_this_month"]], "list2dict()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.list2dict"]], "log()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.log"]], "monday_of_this_week\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.monday_of_this_week"]], "monday_of_this_week\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.monday_of_this_week"]], "move_file_with_metadata()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.move_file_with_metadata"]], "norm_city_name()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.norm_city_name"]], "not_empty()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.not_empty"]], "one_year_ago\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.one_year_ago"]], "one_year_ago\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.one_year_ago"]], "or_()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.or_"]], "path_name()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.path_name"]], "per2float()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.per2float"]], "physical_age()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.physical_age"]], "pinyin()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.pinyin"]], "postcode_city_mapping()\uff08\u5728 ricco.util.postcode \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.postcode.postcode_city_mapping"]], "protect_dir()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.protect_dir"]], "province() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[12, "ricco.util.district.District.province"]], "province_names() \uff08ricco.util.district.district \u65b9\u6cd5\uff09": [[12, "ricco.util.district.District.province_names"]], "punctuation_en2cn()\uff08\u5728 ricco.util.strings \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.strings.punctuation_en2cn"]], "ramdom_lnglat()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.random.ramdom_lnglat"]], "random_by_prob()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.random.random_by_prob"]], "random_date()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.random.random_date"]], "random_name()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.random.random_name"]], "random_room_number()\uff08\u5728 ricco.util.random \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.random.random_room_number"]], "re_fast()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.re_fast"]], "region_full_city_mapping()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.region_full_city_mapping"]], "region_list\uff08ricco.util.district.district \u5c5e\u6027\uff09": [[12, "ricco.util.district.District.region_list"]], "region_short_city_mapping()\uff08\u5728 ricco.util.district \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.district.region_short_city_mapping"]], "relstrip()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.relstrip"]], "remove_ds_store()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.remove_ds_store"]], "remove_null_in_dict()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.remove_null_in_dict"]], "remove_path()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.remove_path"]], "rerstrip()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.rerstrip"]], "ricco.base": [[12, "module-ricco.base"]], "ricco.util.assertion": [[12, "module-ricco.util.assertion"]], "ricco.util.district": [[12, "module-ricco.util.district"]], "ricco.util.docx": [[12, "module-ricco.util.docx"]], "ricco.util.dt": [[12, "module-ricco.util.dt"]], "ricco.util.kdtree": [[12, "module-ricco.util.kdtree"]], "ricco.util.media": [[12, "module-ricco.util.media"]], "ricco.util.os": [[12, "module-ricco.util.os"]], "ricco.util.postcode": [[12, "module-ricco.util.postcode"]], "ricco.util.random": [[12, "module-ricco.util.random"]], "ricco.util.strings": [[12, "module-ricco.util.strings"]], "ricco.util.util": [[12, "module-ricco.util.util"]], "rm_scratch_file()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.rm_scratch_file"]], "rstrip_d0()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.rstrip_d0"]], "save() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.save"]], "second_to_desc()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.second_to_desc"]], "second_to_dhms()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.second_to_dhms"]], "segment()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.segment"]], "set_default_style() \uff08ricco.util.docx.docx \u65b9\u6cd5\uff09": [[12, "ricco.util.docx.Docx.set_default_style"]], "single_ext()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.single_ext"]], "skip_column()\uff08\u5728 ricco.util.assertion \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.assertion.skip_column"]], "sort_by_list()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.sort_by_list"]], "split_path()\uff08\u5728 ricco.util.os \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.os.split_path"]], "the_day_after_tomorrow\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.the_day_after_tomorrow"]], "the_day_after_tomorrow\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.the_day_after_tomorrow"]], "the_day_before_yesterday\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.the_day_before_yesterday"]], "the_day_before_yesterday\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.the_day_before_yesterday"]], "to_bool()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.to_bool"]], "to_float()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.to_float"]], "to_json_string()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.to_json_string"]], "to_str()\uff08\u5728 ricco.util.dt \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.dt.to_str"]], "to_str_list()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.to_str_list"]], "today\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.today"]], "today\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.today"]], "tomorrow\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.tomorrow"]], "tomorrow\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.tomorrow"]], "union_list_v2()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.union_list_v2"]], "union_str_v2()\uff08\u5728 ricco.util.util \u6a21\u5757\u4e2d\uff09": [[12, "ricco.util.util.union_str_v2"]], "warn_()\uff08\u5728 ricco.base \u6a21\u5757\u4e2d\uff09": [[12, "ricco.base.warn_"]], "yesterday\uff08ricco.util.dt.dt \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT.yesterday"]], "yesterday\uff08ricco.util.dt.dt2 \u5c5e\u6027\uff09": [[12, "ricco.util.dt.DT2.yesterday"]]}})